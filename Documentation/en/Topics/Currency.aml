<?xml version="1.0" encoding="utf-8"?>
<topic id="aca28ee6-5c0c-47ee-a7e6-fe295e001be7" revisionNumber="0">
  <developerWalkthroughDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!--<summary>
      <para>Optional abstract</para>
    </summary>-->

    <introduction>
      <para>To work with multi-currency algorithms, it is necessary to use the <codeEntityReference>T:StockSharp.Messages.Currency</codeEntityReference>.
	  The <token>stocksharp</token> provides mechanism for currency conversion from one to another. In the SampleCurrency example in the distribution kit, calculator for
	  conversion of any currencies is presented.</para>
    </introduction>

    <!--<prerequisites>
      <content>
        <para>Optional information on prerequisites</para>
      </content>
    </prerequisites>-->
    
    <!-- One or more procedure or section elements -->

    <procedure>
      <title>Currency conversion example</title>

      <steps class="ordered">
        <step>
          <content>
            <para>
				Below see the partial code from SampleCurrency, converting from one currency to another:
			</para>
				<code language="C#"><![CDATA[
var currency = new Currency
{
	Type = (CurrencyTypes)this.SourceCurrencyType.GetSelectedValue<CurrencyTypes>(),
	Value = this.Amount.Text.To<decimal>(),
};

// doing the conversation
this.Result.Content = currency.Convert((CurrencyTypes)this.TargetCurrencyType.GetSelectedValue<CurrencyTypes>()).Value;]]></code>
			
          </content>
        </step>
		  <step>
			  <content>
				  <para>
					  The following shall be written to find out the conversion rate:
				  </para>
				  <code language="C#">// Euro into USD
var rate = CurrencyTypes.EUR.Convert(CurrencyTypes.USD);</code>
			  </content>
		  </step>
		  <step>
			  <content>
				  <para>
					  Additionally, the <token>stocksharp</token> provides ability to find out the conversion rate history:
				  </para>
				  <code language="C#">// Euro into USD (prev day)
var rate = CurrencyTypes.EUR.Convert(CurrencyTypes.USD, DateTime.Today - TimeSpan.FromDays(1));</code>
			  </content>
		  </step>
		  <step>
			  <content>
				  <para>
					  Here is an example of currency conversion:
				  </para>
				  <mediaLink>
					  <image placement="center" xlink:href="samplecurrency" />
				  </mediaLink>
			  </content>
		  </step>
      </steps>
    </procedure>
    
    <!--<section>
      <title>Optional section</title>

      <content>
        <para>Some topic content</para>
      </content>
    </section>

    <nextSteps>
      <content>
        <para>Optional next steps after reading this walk-through</para>
      </content>
    </nextSteps>-->
    
    <relatedTopics>
      <!-- Supported Link Types
    
         All of the following linking mechanisms may be used in the topic's content 
         as well as in the related topics section.
    
    Linking to API reference documentation: 
    
		    <codeEntityReference>API reference ID</codeEntityReference>

    Linking to external resources and custom HTML topics: 

        <externalLink>
          <linkText>  Required hyperlink text  </linkText>
          <linkAlternateText>  Optional link title  </linkAlternateText>
          <linkUri>  Required URI  </linkUri>
        </externalLink>
    
    Linking to other conceptual topics: 
    
        <link xlink:href="GUID topic name (without file extension)" />
                
    Linking to named references:
    
        (Refer to the project's Help\Settings\links.xml file for more information)
    
        <link xref="id"> Optional link text </link>
        <link vref="id or URI"> Optional link text </link>
        
    -->

      <!-- Example Usage 

      <codeEntityReference>T:MyNamespace.MyClass</codeEntityReference>
      <codeEntityReference>P:MyNamespace.MyClass.MyProp</codeEntityReference>
      <codeEntityReference>M:System.IO.File.OpenText(System.String)</codeEntityReference>

      <externalLink>
        <linkText>Change Log</linkText>
        <linkUri>ChangeLog.html</linkUri>
      </externalLink>

      <link xlink:href="2BFD9215-1216-403d-8C46-8420A4D01B83"/>
      
      <link xref="home">Our Home Page</link>
      <link vref="/controls/design.aspx">Control Architecture</link>
      -->
    </relatedTopics>
    
  </developerWalkthroughDocument>
</topic>
<?xml version="1.0" encoding="utf-8"?>
<topic id="8ea639f6-ce74-4a00-9f13-db59c8c2396f" revisionNumber="0">
  <developerWalkthroughDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!--<summary>
      <para>Optional abstract</para>
    </summary>-->

    <introduction>
      <para>
		With the <codeEntityReference>T:StockSharp.Algo.Strategies.Strategy</codeEntityReference>, you can also create child strategies. For example, when you want to
		implement the trading process, which operates with standard (or previously implemented) algorithms, building them into a single chain:
	  </para>
		<para>
			<mediaLink>
				<image placement="center" xlink:href="strategychilds" />
			</mediaLink>
		</para>
    </introduction>

    <prerequisites>
      <content>
        <para>
		  <link xlink:href="a8159c99-256b-46e4-80fe-7cf92944b4c9">Creating strategies</link>
		</para>
      </content>
    </prerequisites>
    
    <section>
      <title>Work with child strategies</title>

      <content>
        <para>
			To add a child strategy you should use the <codeEntityReference qualifyHint="true">P:StockSharp.Algo.Strategies.Strategy.ChildStrategies</codeEntityReference>
			property. It is possible not to set <codeEntityReference qualifyHint="true">P:StockSharp.Algo.Strategies.Strategy.Connector</codeEntityReference>,
			<codeEntityReference qualifyHint="true">P:StockSharp.Algo.Strategies.Strategy.Portfolio</codeEntityReference>
			and <codeEntityReference qualifyHint="true">P:StockSharp.Algo.Strategies.Strategy.Security</codeEntityReference> values for child strategies, and they
			are automatically filled when you add them to the parent strategy.
		</para>
		<para>
			When adding a new child strategy, it automatically receives the state from the parent. For example, if the parent strategy is in operating state
			(<codeEntityReference qualifyHint="true">F:StockSharp.Algo.ProcessStates.Started</codeEntityReference>),
			then the child is automatically set in the operating state (vice versa, in the case of the <codeEntityReference qualifyHint="true">F:StockSharp.Algo.ProcessStates.Stopped</codeEntityReference>).
		</para>
		<para>
			Therefore, to call the <codeEntityReference qualifyHint="true">M:StockSharp.Algo.Strategies.Strategy.Start</codeEntityReference> method for the child
			strategy is not necessary. It will be called automatically when the parental strategy starts. Thus, the
			<codeEntityReference qualifyHint="true">M:StockSharp.Algo.Strategies.Strategy.Start</codeEntityReference> method can be called only for the root strategies.
		</para>
		<para>
			The parent strategy and all its child strategies are executed in parallel. This means that, if the
			<link xlink:href="a8159c99-256b-46e4-80fe-7cf92944b4c9">iteration model</link> has been selected, the
			<codeEntityReference qualifyHint="true">M:StockSharp.Algo.Strategies.TimeFrameStrategy.OnProcess</codeEntityReference> methods for child and parent
			strategies are executed in parallel. The same situation with the <codeEntityReference qualifyHint="true">P:StockSharp.Algo.Strategies.Strategy.Rules</codeEntityReference>
			rules, the <link xlink:href="8c0327db-494a-4fe0-aba8-0d4b93dea60e">event model</link> has been selected.
		</para>
	  <alert class="note">
		  The <codeEntityReference qualifyHint="true">M:StockSharp.Algo.Strategies.Strategy.Stop</codeEntityReference> method for the child strategy, unlike
		  <codeEntityReference qualifyHint="true">M:StockSharp.Algo.Strategies.Strategy.Start</codeEntityReference>, can be called at any time.
		  For example, when the algorithm needs to forcibly stop the operation of the child strategy, while the algorithm of the child strategy itself has
		  not yet been executed to the end (for example, to interrupt <link xlink:href="24250c24-029c-4dbc-bc8b-4afde645e483">Quoting</link>).
	  </alert>
		<para>
		  By default, child strategies are not associated with each other, and are executed independently. When you need to establish a dependency between the
		  strategies, you must use the <codeEntityReference>T:StockSharp.Algo.Strategies.BasketStrategy</codeEntityReference> class. This class allows you to specify
		  conditions for the strategies terminations depending on each other through the
		  <codeEntityReference>T:StockSharp.Algo.Strategies.BasketStrategyFinishModes</codeEntityReference> indicators. For example, through the
		  <codeEntityReference>F:StockSharp.Algo.Strategies.BasketStrategyFinishModes.First</codeEntityReference> value the condition set wherein all child
		  strategies will be stopped, when at least one of them matched. The example of the <codeEntityReference>T:StockSharp.Algo.Strategies.BasketStrategy</codeEntityReference>
		  use is shown in the <link xlink:href="63952fce-6e43-4427-985a-1654e8d9cfc1">Take-profit and stop-loss</link>.
		</para>
      </content>
    </section>

    <nextSteps>
      <content>
        <para>
		  <link xlink:href="24250c24-029c-4dbc-bc8b-4afde645e483">Quoting</link>
		</para>
		  <para>
			  <link xlink:href="63952fce-6e43-4427-985a-1654e8d9cfc1">Take-profit and stop-loss</link>
		  </para>
      </content>
    </nextSteps>
    
    <relatedTopics>
      <!-- Supported Link Types
    
         All of the following linking mechanisms may be used in the topic's content 
         as well as in the related topics section.
    
    Linking to API reference documentation: 
    
		    <codeEntityReference>API reference ID</codeEntityReference>

    Linking to external resources and custom HTML topics: 

        <externalLink>
          <linkText>  Required hyperlink text  </linkText>
          <linkAlternateText>  Optional link title  </linkAlternateText>
          <linkUri>  Required URI  </linkUri>
        </externalLink>
    
    Linking to other conceptual topics: 
    
        <link xlink:href="GUID topic name (without file extension)" />
                
    Linking to named references:
    
        (Refer to the project's Help\Settings\links.xml file for more information)
    
        <link xref="id"> Optional link text </link>
        <link vref="id or URI"> Optional link text </link>
        
    -->

      <!-- Example Usage 

      <codeEntityReference>T:MyNamespace.MyClass</codeEntityReference>
      <codeEntityReference>P:MyNamespace.MyClass.MyProp</codeEntityReference>
      <codeEntityReference>M:System.IO.File.OpenText(System.String)</codeEntityReference>

      <externalLink>
        <linkText>Change Log</linkText>
        <linkUri>ChangeLog.html</linkUri>
      </externalLink>

      <link xlink:href="2BFD9215-1216-403d-8C46-8420A4D01B83"/>
      
      <link xref="home">Our Home Page</link>
      <link vref="/controls/design.aspx">Control Architecture</link>
      -->
    </relatedTopics>
    
  </developerWalkthroughDocument>
</topic>
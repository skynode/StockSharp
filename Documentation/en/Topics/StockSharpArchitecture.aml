<?xml version="1.0" encoding="utf-8"?>
<topic id="87d2cacd-5492-4bca-9140-7d7c3f5218d7" revisionNumber="0">
  <developerWalkthroughDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
	  <introduction>
		<para>
			  <token>stocksharpapi</token> - a free library for beginners and professionals in the field of algorithmic trading. <token>stocksharpapi</token> 
			  is focused on <token>csharp</token> language programming.
	    </para>
	    
	    <list class="ordered">
			<listItem>
				Quickly (a few hours) and reliably to move from one connection to another (for example, from <token>IB</token> to <token>OpenECry</token>).
			</listItem>
			<listItem>
				There is no need to rewrite the trading algorithm after the release of a new version of the gateway to the broker.
				<token>stocksharpapi</token> updated regularly - see <externalLink>
				<linkText>Releases History</linkText>
				<linkAlternateText>Releases History</linkAlternateText>
				<linkUri>https://github.com/stocksharp/stocksharp/blob/master/_ReleaseNotes/CHANGE_LOG_API.md</linkUri>
				<linkTarget>_blank</linkTarget>
				</externalLink>.
			</listItem>
			<listItem>
				Algorithm code has a unified format (HFT or position trading).
			</listItem>
			<listItem>
				Big community unites different algorithmic traders, regardless of board, broker or connection type.
			</listItem>
			<listItem>
				The increase of customers for trading strategies developers.
			</listItem>
		</list>
	
		
		  <para>
			  <mediaLink>
					<image placement="left" xlink:href="ssapi_schema" />
			  </mediaLink>
		  </para>
				
		  <para><legacyUnderline>The library is divided into the following main components:</legacyUnderline></para>
		<list class="bullet">
			<listItem>
				<codeEntityReference>N:StockSharp.BusinessEntities</codeEntityReference> - basic trading objects (instrument, order, trade, etc.),
				including the interface <codeEntityReference>T:StockSharp.BusinessEntities.IConnector</codeEntityReference> description.
			</listItem>
			
			<listItem>
			<codeEntityReference>N:StockSharp.Algo</codeEntityReference> - combines a large number of modules that are directly related to trading strategies writing
				(for more details see <link xlink:href="2c3a0d3a-6e89-42a1-a158-9a258e0a62e1">Trading strategies</link>). There are some auxiliary strategies,
				such as market making  under several schemes (for more details see <link xlink:href="24250c24-029c-4dbc-bc8b-4afde645e483">Quoting</link>) in this component.
				Also there is the base implementation of <codeEntityReference>T:StockSharp.BusinessEntities.IConnector</codeEntityReference> interface -
				Connector class in this component. 
				<list class="bullet">
				  		<listItem>
  							<para><codeEntityReference>N:StockSharp.Algo.Strategies</codeEntityReference> - the base classes for creating strategies.</para>
  						</listItem>
  						<listItem>
  							<para><codeEntityReference>N:StockSharp.Algo.Candles</codeEntityReference> - here is all the necessary functionality to work with candles and graphic patterns recognition collected
  							(for more details see <link xlink:href="cd52cfcf-938c-4fce-9a56-4e9a001f0792">Candles</link>).</para>
  						</listItem>
  						<listItem>
  							<para><codeEntityReference>N:StockSharp.Algo.Indicators</codeEntityReference> - contains the base classes and interfaces for creating technical indicators, as well as built-in indicators.
  							See <link xlink:href="8b9125ee-9d74-444f-82d6-5dea51266fd4">Indicators</link>.</para>
  						</listItem>
  						<listItem>
  							<para><codeEntityReference>N:StockSharp.Algo.Derivatives</codeEntityReference> - classes for work with options.
  							See <link xlink:href="b85270c7-ee7f-4dbc-a0a3-aac466b75f98">Options</link>.</para>
  						</listItem>
  						<listItem>
  							<para><codeEntityReference>N:StockSharp.Algo.Testing</codeEntityReference> - classes for different types of strategies testing: on random and historical data,
  							on actual market data and also for optimization. See <link xlink:href="febbcf31-63d1-449d-847e-92fd8424f926">Testing</link>.</para>
  						</listItem>
  						<listItem>
  							<para><codeEntityReference>N:StockSharp.Algo.Storages</codeEntityReference> - classes for working with data storage.
  							See <link xlink:href="7a8a9518-6270-4cfe-a829-fa6c40e5fabd">Market-Data storage</link>.</para>
  						</listItem>
  						<listItem>
  							<para><legacyBold>Other modules</legacyBold> - various additional modules associated with strategies development: commissions, slippages, profit-loss,
  							risk management, statistics, a number of auxiliary algorithms (order book cleaning from own orders, the calculation of the market price, rounding prices
  							to the instrument tick price, etc.) and so on, that simplify the creation of trading algorithms.</para>
  						</listItem>
				</list>
				
			</listItem>
			<listItem>
				<codeEntityReference qualifyHint="false">N:StockSharp.Messages</codeEntityReference> - 
				message classes, main enumerations,  exchanges hours of operation, the Unit <codeEntityReference qualifyHint="false">T:StockSharp.Messages.Unit</codeEntityReference> class, etc.
			</listItem>
			<listItem>
				<codeEntityReference qualifyHint="false">N:StockSharp.Xaml</codeEntityReference> - graphical components for tabular information display (orders, trades, Level1, etc.),
				instruments search, portfolios, order book display, options board, strategies performance monitoring, logging (and others), including:
				<list class="bullet">
  						<listItem>
  							<para><codeEntityReference>N:StockSharp.Xaml.Charting</codeEntityReference> - tools for creating various diagrams: candles, indicators, profitability, etc.</para>
  						</listItem>
  						<listItem>
  							<para><codeEntityReference>N:StockSharp.Xaml.Diagram</codeEntityReference> - graphical elements for strategies visual creation.</para>
  						</listItem>
				</list>
			</listItem>
			
			<listItem>
				<codeEntityReference qualifyHint="false">N:StockSharp.Logging</codeEntityReference> - special tools to work with debug information. There are different
				ways to output debug messages: to the debug window, to a file, to the graphical component, send via email or sound beep in case of problems in the algorithm.
			</listItem>
		
			<listItem>
				<legacyBold>Connectors modules</legacyBold> - include the connectors implementation to the trading systems with the same names
				(for example, <codeEntityReference>N:StockSharp.InteractiveBrokers</codeEntityReference> contains the connector implementation to <token>ib</token>).
			</listItem>
			
		</list>
	  </introduction>
  </developerWalkthroughDocument>
</topic>
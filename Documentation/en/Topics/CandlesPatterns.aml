<?xml version="1.0" encoding="utf-8"?>
<topic id="ccc96909-8623-4f56-b3ee-fdc5070b3fde" revisionNumber="1">
	<developerWalkthroughDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    
	<introduction>
		<para>It is possible to make candles pattern recognition through the <codeEntityReference>T:StockSharp.Algo.Candles.CandleHelper</codeEntityReference>
		class by the following methods:</para>
		  
		<list class="bullet">
			<listItem>
				<codeEntityReference>M:StockSharp.Algo.Candles.CandleHelper.IsWhiteOrBlack(StockSharp.Algo.Candles.Candle)</codeEntityReference> -
				Is it white or black candle.
			</listItem>
			  
			<listItem>
				<codeEntityReference>M:StockSharp.Algo.Candles.CandleHelper.IsMarubozu(StockSharp.Algo.Candles.Candle)</codeEntityReference> -
				Is it a shadowless candle.
			</listItem>
			  
			<listItem>
				<codeEntityReference>M:StockSharp.Algo.Candles.CandleHelper.IsSpinningTop(StockSharp.Algo.Candles.Candle)</codeEntityReference> -
				Is it a neutral candle by trades.
			</listItem>
			
			<listItem>
				<codeEntityReference>M:StockSharp.Algo.Candles.CandleHelper.IsHammer(StockSharp.Algo.Candles.Candle)</codeEntityReference> -
				Is it a hammer candle.
			</listItem>
			  
			<listItem>
				<codeEntityReference>M:StockSharp.Algo.Candles.CandleHelper.IsDragonflyOrGravestone(StockSharp.Algo.Candles.Candle)</codeEntityReference> -
				Is it a dragonfly or gravestone candle.
			</listItem>
			  
			<listItem>
				<codeEntityReference>M:StockSharp.Algo.Candles.CandleHelper.IsBullishOrBearish(StockSharp.Algo.Candles.Candle)</codeEntityReference> -
				Is it a bull or bear candle.
			</listItem>
		</list>
	</introduction>
    
    <section>
		<title>Common methods of work with candles</title>

		<content>
			<para><codeEntityReference>T:StockSharp.Algo.Candles.CandleHelper</codeEntityReference> also provides a variety of algorithms for candles to simplify writing of code:</para>
		  
			<list class="bullet">

				<listItem>
					<para>The candle time range getting through the <codeEntityReference>Overload:StockSharp.Algo.Candles.CandleHelper.GetCandleBounds</codeEntityReference> method.
					For example, you want to find out exactly when the current 10.5-minute candle ends:</para>
				
					<code language="C#">
					<![CDATA[
var candleTimeFrame = TimeSpan.FromMinutes(10.5);

Console.WriteLine(candleTimeFrame.GetCandleBounds(DateTime.Now).Max);
					]]>
					</code>
				</listItem>
			  
				<listItem>
					<para>To get the candle length, its body, its shadows through
					<codeEntityReference>M:StockSharp.Algo.Candles.CandleHelper.GetLength(StockSharp.Algo.Candles.Candle)</codeEntityReference>,
					<codeEntityReference>M:StockSharp.Algo.Candles.CandleHelper.GetBody(StockSharp.Algo.Candles.Candle)</codeEntityReference>,
					<codeEntityReference>M:StockSharp.Algo.Candles.CandleHelper.GetTopShadow(StockSharp.Algo.Candles.Candle)</codeEntityReference> and
					<codeEntityReference>M:StockSharp.Algo.Candles.CandleHelper.GetBottomShadow(StockSharp.Algo.Candles.Candle)</codeEntityReference>:</para>
				  
					<code language="C#">
					<![CDATA[
// sample candle
var candle = ...

Console.WriteLine(candle.GetCandleLength());
Console.WriteLine(candle.GetCandleBody());
Console.WriteLine(candle.GetCandleTopShadow());
Console.WriteLine(candle.GetCandleBottomShadow());
					]]>
					</code>
				</listItem>
			</list>
		</content>
	</section>

  </developerWalkthroughDocument>
</topic>
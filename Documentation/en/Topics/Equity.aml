<?xml version="1.0" encoding="utf-8"?>
<topic id="973860e9-8f2d-4035-98de-bb88b33b6751" revisionNumber="1">
  <developerWalkthroughDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!--
    <summary>
      <para>Optional summary abstract</para>
    </summary>
    -->
    <introduction>
      <!-- Uncomment this to generate an outline of the section and sub-section
           titles.  Specify a numeric value as the inner text to limit it to
           a specific number of sub-topics when creating the outline.  Specify
           zero (0) to limit it to top-level sections only.  -->
      <!-- <autoOutline /> -->
      <para>The <token>stocksharp</token> provides the possibility to plot equity curves for further analysis of the trading algorithm work. The data for the curve
      obtained using the <codeEntityReference qualifyHint="false">T:StockSharp.Algo.PnL.PnLManager</codeEntityReference> class. This class calculates the current value,
      informing the algorithm about the changes through the <codeEntityReference qualifyHint="true">E:StockSharp.Algo.Strategies.Strategy.PnLChanged</codeEntityReference>
      event.
      </para>
      
      <para>
      	To calculate the curve parameters (maximum drawdown, Sharpe ratio, etc.) <codeEntityReference qualifyHint="false">T:StockSharp.Algo.Statistics.StatisticManager</codeEntityReference> used.
      	These parameters are stored in the <codeEntityReference qualifyHint="true">P:StockSharp.Algo.Statistics.StatisticManager.Parameters</codeEntityReference> property.
      	
      	Each parameter implements
      	<codeEntityReference qualifyHint="false">T:StockSharp.Algo.Statistics.IPnLStatisticParameter</codeEntityReference>, 
      	<codeEntityReference qualifyHint="false">T:StockSharp.Algo.Statistics.ITradeStatisticParameter</codeEntityReference>,      	
      	<codeEntityReference qualifyHint="false">T:StockSharp.Algo.Statistics.IOrderStatisticParameter</codeEntityReference> or
      	<codeEntityReference qualifyHint="false">T:StockSharp.Algo.Statistics.IPositionStatisticParameter</codeEntityReference> interfaces.
      	
      	If you want a particular calculation parameter, you must implement one of these interfaces and add the parameter to the 
      	<codeEntityReference qualifyHint="true">P:StockSharp.Algo.Statistics.StatisticManager.Parameters</codeEntityReference>.
      </para>
      
      <para>
      	The use of the <codeEntityReference qualifyHint="true">E:StockSharp.Algo.Strategies.Strategy.PnLChanged</codeEntityReference> is shown in the
      	<link xlink:href="5b90a23e-24b9-474a-a699-da47b666194a">backtesting</link> section in the context of <link xlink:href="2c3a0d3a-6e89-42a1-a158-9a258e0a62e1">trading strategies</link>:
      </para>
      <code language="C#">
_strategy.PnLChanged += () =>
{
	var data = new EquityData
	{
		Time = _strategy.Trader.MarketTime,
		Value = _strategy.PnL,
	};

	this.GuiAsync(() => _curveItems.Add(data));
};      
      </code>
      <para>
      	The statistics manager is obtained through the 
      	<codeEntityReference qualifyHint="true">P:StockSharp.Algo.Strategies.Strategy.StatisticManager</codeEntityReference> property.
      </para>
      <para>
      	When the new data occur, the curve is drawn on the special <codeEntityReference>T:StockSharp.Xaml.Charting.EquityCurveChart</codeEntityReference> chart.
      	To start drawing a curve on this chart, you must call the <codeEntityReference qualifyHint="true">Overload:StockSharp.Xaml.Charting.EquityCurveChart.CreateCurve</codeEntityReference> method.
      	The resulting collection is filled with data that is passed during processing the
      	<codeEntityReference qualifyHint="true">E:StockSharp.Algo.Strategies.Strategy.PnLChanged</codeEntityReference> event.
      </para>
      <para>
      	The <codeEntityReference>T:StockSharp.Xaml.Charting.EquityCurveChart</codeEntityReference> chart allows to draw multiple curves to be able to compare their
      	profitability with each other. An example of this approach is shown in the <link xlink:href="24a5c734-199f-4090-943d-6324a04f335b">optimization</link> section.
      </para>
      <para>
      	The use of the <codeEntityReference qualifyHint="false">T:StockSharp.Xaml.StatisticParameterGrid</codeEntityReference> visual panel, which allows to display
      	<codeEntityReference qualifyHint="true">P:StockSharp.Xaml.StatisticParameterGrid.Parameters</codeEntityReference> parameters, is shown in the
      	<link xlink:href="5b90a23e-24b9-474a-a699-da47b666194a">backtesting</link> section.
      </para>
    </introduction>
   
  </developerWalkthroughDocument>
</topic>